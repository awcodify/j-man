name: Go
on: [push]
jobs:
  test:
    name: Test
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: jmanager_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: jmanager
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x]
        # Since github action have a limitation to only run container on linux based,
        #   so we temporarily remove macos and windows platform
        # TODO: enable macos and windows platform
        #   We have two options to do this:
        #   - Stick with only test on ubuntu
        #   - Mock the database connections
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Remove sqlboiler test
      run: rm app/models/*_test.go
    
    - name: Get sql-migrate
      run: go get -v github.com/rubenv/sql-migrate/sql-migrate

    - name: Copy the sql-migrate config
      run: cp sql-migrate.yaml.example sql-migrate.yaml

    - name: Database migration
      run: ~/go/bin/sql-migrate up -config=sql-migrate.yaml -env=test
        
    - name: Test
      run: go test -short -v ./... -race -coverprofile=coverage.txt.tmp -covermode=atomic
      env:
        APP_ENV: test 
        SERVER_HOST: localhost
        SERVER_PORT: 9000
        JMETER_PATH: /Users/danuakbar/Downloads/apache-jmeter-5.0/bin/jmeter
        DB_DSN: 'user=jmanager_user password=password dbname=jmanager sslmode=disable'
        HTML_ROOT: "app/views/html"
        HTML_LAYOUT_ROOT: "app/views/html/layout"
        HTML_LAYOUR_BASE_HTML: "app/views/html/layout/base.html"

    - name: Upload to codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        fail_ci_if_error: true #optional (default = false)
